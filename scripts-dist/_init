#!/bin/bash

# This init script is hardwired to be run when PiKrellCam starts.
# It verifies that the www config matches the PiKrellCam config.
# This is not a user script for the "scripts" directory.
#
# Argument substitution done by PiKrellCam before running this script:
#   $I - install directory full path
#   $a - the archive directory full path
#   $m - the media directory full path
#   $M - the mjpeg_file PiKrellCam writes and the web page reads.
#   $P - the fifo command file full path
#   $G - log file configured in ~/.pikrellcam/pikrellcam.conf.
#

INSTALL_DIR=$1
ARCHIVE_DIR=$2
MEDIA_DIR=$3
MJPEG_FILE=$4
FIFO_FILE=$5
LOG_FILE=$6
SERVOS_ENABLE=$7
LOOP_DIR=$8

STATE_FILE=/run/pikrellcam/state
MJPEG_FILE=/run/pikrellcam/mjpeg.jpg

if [ "$LOG_FILE" == "" ]
then
	LOG_FILE = /dev/null
fi

cd $INSTALL_DIR

# note there is a tab before 'define' in the CMD assignments.
#
WWW_CONFIG=$INSTALL_DIR/www/config.php
PIKRELLCAM=$INSTALL_DIR/pikrellcam
ARCHIVE_LINK=www/archive
LOOP_LINK=www/loop
MEDIA_LINK=www/media
STATE_LINK=www/state
MJPEG_LINK=www/mjpeg.jpg
VERSION=`pikrellcam --version`

if [ ! -h $STATE_LINK ]
then
	echo "  making $STATE_LINK link to $STATE_FILE" >> $LOG_FILE
	ln -s $STATE_FILE $STATE_LINK
fi

if [ ! -h $MJPEG_LINK ]
then
	echo "  making $MJPEG_LINK link to $MJPEG_FILE" >> $LOG_FILE
	ln -s $MJPEG_FILE $MJPEG_LINK
fi

if [ ! -h $MEDIA_LINK ]
then
	echo "  making $MEDIA_LINK link to $MEDIA_DIR" >> $LOG_FILE
	ln -s $MEDIA_DIR $MEDIA_LINK
else
	CURRENT_MEDIA=`realpath $MEDIA_LINK`
	if [ "$CURRENT_MEDIA" != "$MEDIA_DIR" ]
	then
		echo "  replacing $MEDIA_LINK link from $CURRENT_MEDIA to $MEDIA_DIR" >> $LOG_FILE
		rm $MEDIA_LINK
		ln -s $MEDIA_DIR $MEDIA_LINK
	else
		echo "  $MEDIA_LINK link is already set to $MEDIA_DIR" >> $LOG_FILE
	fi
fi

if [ ! -h $ARCHIVE_LINK ]
then
	echo "  making $ARCHIVE_LINK link to $ARCHIVE_DIR" >> $LOG_FILE
	ln -s $ARCHIVE_DIR $ARCHIVE_LINK
else
	CURRENT_ARCHIVE=`realpath $ARCHIVE_LINK`
	if [ "$CURRENT_ARCHIVE" != "$ARCHIVE_DIR" ]
	then
		echo "  replacing $ARCHIVE_LINK link from $CURRENT_ARCHIVE to $ARCHIVE_DIR" >> $LOG_FILE
		rm $ARCHIVE_LINK
		ln -s $ARCHIVE_DIR $ARCHIVE_LINK
	else
		echo "  $ARCHIVE_LINK link is already set to $ARCHIVE_DIR" >> $LOG_FILE
	fi
fi

if [ ! -h $LOOP_LINK ]
then
	echo "  making $LOOP_LINK link to $LOOP_DIR" >> $LOG_FILE
	ln -s $LOOP_DIR $LOOP_LINK
else
	CURRENT_LOOP=`realpath $LOOP_LINK`
	if [ "$CURRENT_LOOP" != "$LOOP_DIR" ]
	then
		echo "  replacing $LOOP_LINK link from $CURRENT_LOOP to $LOOP_DIR" >> $LOG_FILE
		rm $LOOP_LINK
		ln -s $LOOP_DIR $LOOP_LINK
	else
		echo "  $LOOP_LINK link is already set to $LOOP_DIR" >> $LOG_FILE
	fi
fi

if ! grep -q $LOG_FILE $WWW_CONFIG
then
	CMD="/LOG_FILE/c\	define\(\"LOG_FILE\", \"$LOG_FILE\"\);"
	sed -i "$CMD" $WWW_CONFIG
	echo "  $WWW_CONFIG: LOG_FILE updated to: $LOG_FILE" >> $LOG_FILE
else
	echo "  $WWW_CONFIG: LOG_FILE not changed." >> $LOG_FILE
fi

if ! grep -q $MJPEG_FILE $WWW_CONFIG
then
	CMD="/MJPEG_FILE/c\	define\(\"MJPEG_FILE\", \"$MJPEG_FILE\"\);"
	sed -i "$CMD" $WWW_CONFIG
	echo "  $WWW_CONFIG: MJPEG_FILE updated to: $MJPEG_FILE" >> $LOG_FILE
else
	echo "  $WWW_CONFIG: MJPEG_FILE not changed." >> $LOG_FILE
fi

if ! grep -q $FIFO_FILE $WWW_CONFIG
then
	CMD="/FIFO_FILE/c\	define\(\"FIFO_FILE\", \"$FIFO_FILE\"\);"
	sed -i "$CMD" $WWW_CONFIG
	echo "  $WWW_CONFIG: FIFO_FILE updated to: $FIFO_FILE" >> $LOG_FILE
else
	echo "  $WWW_CONFIG: FIFO_FILE not changed." >> $LOG_FILE
fi

if ! grep -q $PIKRELLCAM $WWW_CONFIG
then
	CMD="/PIKRELLCAM/c\	define\(\"PIKRELLCAM\", \"$PIKRELLCAM\"\);"
	sed -i "$CMD" $WWW_CONFIG
	echo "  $WWW_CONFIG: PIKRELLCAM updated to: $PIKRELLCAM" >> $LOG_FILE
else
	echo "  $WWW_CONFIG: PIKRELLCAM not changed." >> $LOG_FILE
fi

if ! grep -q $SERVOS_ENABLE $WWW_CONFIG
then
	CMD="/SERVOS_ENABLE/c\	define\(\"SERVOS_ENABLE\", \"$SERVOS_ENABLE\"\);"
	sed -i "$CMD" $WWW_CONFIG
	echo "  $WWW_CONFIG: SERVOS_ENABLE updated to: $SERVOS_ENABLE" >> $LOG_FILE
else
	echo "  $WWW_CONFIG: SERVOS_ENABLE not changed." >> $LOG_FILE
fi

if ! fgrep -q $VERSION $WWW_CONFIG
then
	CMD="/VERSION/c\	define\(\"VERSION\", \"$VERSION\"\);"
	sed -i "$CMD" $WWW_CONFIG
	echo "  $WWW_CONFIG: VERSION updated to: $VERSION" >> $LOG_FILE
else
	echo "  $WWW_CONFIG: VERSION not changed." >> $LOG_FILE
fi

cd $INSTALL_DIR/scripts-dist
for script in *
do
	if [ ! -f ../scripts/$script ] && [ "${script:0:1}" != "_" ] \
		&& [ "${script:0:4}" != "pkc_" ] && [ "${script:0:8}" != "example_" ]
	then
		cp $script ../scripts 
	fi
done

